[{"path":"https://icra.github.io/ediblecity/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ediblecity authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"set-scenarios-of-urban-agriculture","dir":"Articles","previous_headings":"","what":"Set scenarios of urban agriculture","title":"ediblecity","text":"function set_scenario provides convenient way create randomized scenarios urban agriculture. use city_example provided package meant serve example create model city interest. create one scenario, 50% normal gardens, vacant plot, streets 75% rooftops converted edible_gardens. 50% created gardens commercial purposes. see correspondence original urban agriculture elements, see ?set_scenario. warnings triggered elements enough fulfill proportions provided function. examples, use scenario created set_scenario, indicators can calculated using sf object structure city_example. Likewise, parameters used indicators defined city_land_uses. However, indicators provide option override provide customized dataframe parameters. structure dataframe detailed documentation function.","code":"scenario <- set_scenario(city_example,                            pGardens = 0.5,                            pVacant = 0.5,                            pRooftop = 0.75,                            private_gardens_from = \"Normal garden\",                            vacant_from = c(\"Vacant\", \"Streets\"),                            rooftop_from = \"Rooftop\",                            pCommercial = 0.5) #> Only 328 rooftops out of 453 assumed satisfy the 'min_area_rooftop'"},{"path":[]},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"urban-heat-island","dir":"Articles","previous_headings":"Estimate the benefits of urban agriculture","what":"Urban Heat Island","title":"ediblecity","text":"urban heat island indicator can return summary values stars object. needs raster representing Sky view factor. See ?UHI details. use SVF object provided package.","code":"UHI(scenario, SVF) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.0000  0.5505  1.0131  1.0305  1.4107  2.5867 plot(UHI(scenario, SVF, return_raster = TRUE))"},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"runoff-prevention","dir":"Articles","previous_headings":"Estimate the benefits of urban agriculture","what":"Runoff prevention","title":"ediblecity","text":"function runoff_prev returns estimation runoff city specific rain event (mm/day). also estimates total rainfall rainwater harvested urban agriculture.","code":"runoff_prev(scenario) #>       runoff     rainfall  rainharvest  #>     35.81515 108169.04500   1551.19929"},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"distance-to-closest-green-area","dir":"Articles","previous_headings":"Estimate the benefits of urban agriculture","what":"Distance to closest green area","title":"ediblecity","text":"function green_distance computes distances home city closest public green area larger specific area. homes must identified using column passed residence_col. default values minimal area (0.5 ha) maximum distance (300 meters) follow recommendations . percent_out set TRUE, instead summary distances, returns percentage homes max_dist.","code":"green_distance(scenario) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    6.12  155.08  251.70  249.72  347.42  465.73 green_distance(scenario, percent_out = TRUE) #> [1] 36.92615"},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"green-per-capita","dir":"Articles","previous_headings":"Estimate the benefits of urban agriculture","what":"Green per capita","title":"ediblecity","text":"function green_capita calculates amount public /private green per capita city. can compute total city, values neighbourhood ratio neighbourhoods minimum maximum value (min / max).","code":"green_capita(scenario, inhabitants = 6000) #> [1] 10.74717  green_capita(scenario,               neighbourhoods = neighbourhoods_example,               inh_col = 'inhabitants',              name_col = 'name',              verbose = TRUE) #> # A tibble: 2 × 4 #>   name              area inhabitants green_capita #>   <chr>            <dbl>       <dbl>        <dbl> #> 1 Sant Narcís nord 36241        1028        35.3  #> 2 Sant Narcís sud  33741        5290         6.38  green_capita(scenario,               neighbourhoods = neighbourhoods_example,               inh_col = 'inhabitants',              name_col = 'name') #> [1] 0.1809236"},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"nitrogen-dioxide-no2-sequestered-by-urban-green","dir":"Articles","previous_headings":"Estimate the benefits of urban agriculture","what":"Nitrogen dioxide (NO2) sequestered by urban green","title":"ediblecity","text":"function no2_seq computes amount NO2 sequestered urban green gr/s.","code":"no2_seq(scenario) #>     gr/s  #> 109.5123"},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"jobs-created-by-commercial-urban-agriculture","dir":"Articles","previous_headings":"Estimate the benefits of urban agriculture","what":"Jobs created by commercial urban agriculture","title":"ediblecity","text":"function edible_jobs estimates number jobs potentially created commercial urban agriculture. Since number jobs / m2 randomized, computes Monte Carlo simulation (n=1000) estimate value returns confidence interval (unless verbose = TRUE).","code":"edible_jobs(scenario) #>        5%       50%       95%  #>  213.7952 1788.0295 3262.7159"},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"volunteers-involved-in-community-urban-agriculture","dir":"Articles","previous_headings":"Estimate the benefits of urban agriculture","what":"Volunteers involved in community urban agriculture","title":"ediblecity","text":"function edible_volunteers estimates number volunteers potentially involved community urban agriculture. Since number volunteers / m2 randomized, computes Monte Carlo simulation (n=1000) estimate value returns confidence interval (unless verbose = TRUE).","code":"edible_volunteers(scenario) #>        5%       50%       95%  #>  223.1315 2345.1176 4454.5582"},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"food-production","dir":"Articles","previous_headings":"Estimate the benefits of urban agriculture","what":"Food production","title":"ediblecity","text":"function food_production estimates food produced urban agriculture (kg/year). Since productivity plot randomized, computes Monte Carlo simulation (n=1000) estimate value returns confidence interval (unless verbose = TRUE).","code":"food_production(scenario) #>        5%       50%       95%  #>  670084.2  918955.1 1160531.7"},{"path":"https://icra.github.io/ediblecity/articles/ediblecity.html","id":"randomization","dir":"Articles","previous_headings":"","what":"Randomization","title":"ediblecity","text":"construction scenarios well parameters indicators randomized consider uncertainty. recommendation run scenario want simulate Monte Carlo simulation get confidence interval indicator. find practical implementation .","code":""},{"path":"https://icra.github.io/ediblecity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josep Pueyo-Ros. Author, maintainer. ICRA - Catalan Institute Water Research. Funder.            Edicitnet,776665","code":""},{"path":"https://icra.github.io/ediblecity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pueyo-Ros J (2023). ediblecity: Modeling Urban Agriculture City Scale. https://github.com/icra/ediblecity, https://icra.github.io/ediblecity/.","code":"@Manual{,   title = {ediblecity: Modeling Urban Agriculture at City Scale},   author = {Josep Pueyo-Ros},   year = {2023},   note = {https://github.com/icra/ediblecity, https://icra.github.io/ediblecity/}, }"},{"path":"https://icra.github.io/ediblecity/index.html","id":"ediblecity","dir":"","previous_headings":"","what":"Modeling Urban Agriculture at City Scale","title":"Modeling Urban Agriculture at City Scale","text":"goal ediblecity estimate potential UA contribute addressing several urban challenges city-scale. Within aim, followed urban challenges defined Eklipse project followed nearly European projects focused Nature-based Solutions. selected 8 indicators directly related one several urban challenges.","code":""},{"path":"https://icra.github.io/ediblecity/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Modeling Urban Agriculture at City Scale","text":"can install development version ediblecity GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"icra/ediblecity\")"},{"path":"https://icra.github.io/ediblecity/index.html","id":"indicators-estimated","dir":"","previous_headings":"","what":"Indicators estimated","title":"Modeling Urban Agriculture at City Scale","text":"package provides eight indicators estimate different benefits urban agriculture: food_production(): Amount food produced city. green_capita(): Green per capita can computed raw difference among neighbourhoods. green_distance(): Distance closest public green area larger certain surface. computes also proportion homes specific threshold. UHI(): Urban heat island rasters (stars object) numeric values. edible_jobs(): Number jobs created commercial urban agriculture. edible_volunteers(): Number volunteers involved community urban agriculture. no2_seq(): Amount NO2 sequestered urban green (gr/s). runoff_prev(): Runoff city specific rain event. also computes amount rainwater harvested urban agriculture initiatives.","code":""},{"path":"https://icra.github.io/ediblecity/index.html","id":"set-a-scenario","dir":"","previous_headings":"","what":"Set a scenario","title":"Modeling Urban Agriculture at City Scale","text":"Although ediblecity can also estimate indicators directly sf object, function set_scenario provides basic tool create scenario combining different proportions elements urban agriculture. warnings triggered function can’t satisfy parameters passed user. attributes urban agriculture elements included city_land_uses dataframe. can used default. Otherwise, customized dataframe can provided compute indicator.","code":"library(ediblecity)  scenario <- set_scenario(city_example,                          pGardens = 0.7,                          pVacant = 0.8,                          pRooftop = 0.6,                          pCommercial = 0.5) #> Only 328 rooftops out of 362.4 assumed satisfy the 'min_area_rooftop' knitr::kable(city_land_uses)"},{"path":"https://icra.github.io/ediblecity/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Modeling Urban Agriculture at City Scale","text":"Contributions welcome! existing indicators can improved well new indicators can created. Likewise, creation new scenarios can include new elements urban agriculture provide customization. Scientific collaborations also welcome! Check research profile Google scholar.","code":""},{"path":"https://icra.github.io/ediblecity/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Modeling Urban Agriculture at City Scale","text":"research funded Edicitnet project (grant agreement nº 776665)","code":""},{"path":"https://icra.github.io/ediblecity/reference/SVF.html","id":null,"dir":"Reference","previous_headings":"","what":"Sky View Factor for City Example — SVF","title":"Sky View Factor for City Example — SVF","text":"contains raster representing sky view factor 'city_example', calculated using SAGA algorithm digital surface model 3x3 LIDAR dataset.","code":""},{"path":"https://icra.github.io/ediblecity/reference/SVF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sky View Factor for City Example — SVF","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/UHI.html","id":null,"dir":"Reference","previous_headings":"","what":"Heat island effect — UHI","title":"Heat island effect — UHI","text":"indicator calculates urban heat island (UHI) using DPRA guidelines Dutch government.","code":""},{"path":"https://icra.github.io/ediblecity/reference/UHI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heat island effect — UHI","text":"","code":"UHI(   x,   SVF,   green_df = NULL,   Qql = 6.11,   Cair = 1007,   Pair = 1.14,   Tmax = 30.8,   Tmin = 20,   windspeed = 2.77,   return_raster = FALSE,   verbose = FALSE )"},{"path":"https://icra.github.io/ediblecity/reference/UHI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heat island effect — UHI","text":"x 'sf' object urban model city 'land_use' column categories urban features. SVF 'stars' object representing sky view factor. can computed, e.g. SAGA's Sky View Factor algorithm loaded stars::read_stars(). green_df dataframe categories considered urban green two columns. 'land_uses' names 'land_use' 'x' considered green; 'pGreen' column percentage green function. NULL, categories values 'city_land_uses' dataset considered. Qql numerical value representing average solar radiation W/m2/hour. Cair numerical value representing air heat capacity J. Pair numerical value representing air density kg/m3. Tmax Averaged maximum temperature ºC. Tmin Averaged minimum temperature ºC. windspeed Averaged wind speed m/s. return_raster TRUE, raster UHI values returned. Otherwise, summary raster values returned. verbose TRUE, returns vector UHI value cell.","code":""},{"path":"https://icra.github.io/ediblecity/reference/UHI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heat island effect — UHI","text":"'stars' object values UHI. numerical vector summary statistic UHI values. See params information select one.","code":""},{"path":"https://icra.github.io/ediblecity/reference/UHI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Heat island effect — UHI","text":"DEFAULT values values 'city_example' dataset August (averaged values 2011-2020)","code":""},{"path":"https://icra.github.io/ediblecity/reference/UHI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heat island effect — UHI","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/UHI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heat island effect — UHI","text":"","code":"# Get a summary of the UHI UHI(city_example, SVF) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   0.000   1.247   1.596   1.494   2.060   2.675   # Get a 'stars' object representing UHI uhi <- UHI(city_example, SVF, return_raster = TRUE) plot(uhi)"},{"path":"https://icra.github.io/ediblecity/reference/city_example.html","id":null,"dir":"Reference","previous_headings":"","what":"City example — city_example","title":"City example — city_example","text":"contains urban model example use package. specifically urban model Sant Narcís, neighbourhood Girona (Catalonia)","code":""},{"path":"https://icra.github.io/ediblecity/reference/city_example.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"City example — city_example","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/city_land_uses.html","id":null,"dir":"Reference","previous_headings":"","what":"City Land Uses — city_land_uses","title":"City Land Uses — city_land_uses","text":"contains information functions belonging green infrastructure urban agriculture city_example dataset. information can used params indicators, cases already default values.","code":""},{"path":"https://icra.github.io/ediblecity/reference/city_land_uses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"City Land Uses — city_land_uses","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/edible_jobs.html","id":null,"dir":"Reference","previous_headings":"","what":"The jobs created by urban agriculture in your city — edible_jobs","title":"The jobs created by urban agriculture in your city — edible_jobs","text":"indicator estimates number full-time jobs created commercial urban agriculture initiatives city. uses range jobs per square meter create median confidence interval number jobs simulating random uniform distribution 1000 values within provided range.","code":""},{"path":"https://icra.github.io/ediblecity/reference/edible_jobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The jobs created by urban agriculture in your city — edible_jobs","text":"","code":"edible_jobs(   x,   jobs = c(0.000163, 0.022),   edible = NULL,   area_col = \"edible_area\",   interval = 0.95,   verbose = FALSE )"},{"path":"https://icra.github.io/ediblecity/reference/edible_jobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The jobs created by urban agriculture in your city — edible_jobs","text":"x 'sf' object urban model city 'land_use' column categories urban features. jobs vector length 2 range jobs created square meter edible gardens. edible categories 'land_uses' represent commercial edible gardens. NULL, land_uses 'city_land_uses' dataset used jobs TRUE. area_col column used area feature. NULL, area calculated sf::st_area() interval numeric value confidence interval returned function. verbose TRUE, indicators returns vector (N=1000) simulated values.","code":""},{"path":"https://icra.github.io/ediblecity/reference/edible_jobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The jobs created by urban agriculture in your city — edible_jobs","text":"verbose FALSE, returns named vector median low high confidence intervals. Otherwise, returns vector length 1000 simulated values.","code":""},{"path":"https://icra.github.io/ediblecity/reference/edible_jobs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The jobs created by urban agriculture in your city — edible_jobs","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/edible_jobs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The jobs created by urban agriculture in your city — edible_jobs","text":"","code":"# First, we set a scenario with commercial gardens that create jobs scenario <- set_scenario(city_example, pCommercial = 1, quiet = TRUE) # Get the 95% confidence interval edible_jobs(scenario, interval = 0.95) #>        5%       50%       95%  #>  194.7652 1475.0093 2794.3212   # Get the raw values from the Monte Carlo simulation and adjust the number of jobs by square meter. result <- edible_jobs(scenario, jobs = c(0.02, 0.03), verbose = TRUE) result[1:10] #>  [1] 3293.431 2845.174 3589.129 3839.864 3070.570 2722.237 3831.243 2831.280 #>  [9] 3596.937 3173.758"},{"path":"https://icra.github.io/ediblecity/reference/edible_volunteers.html","id":null,"dir":"Reference","previous_headings":"","what":"The number of volunteers involved in urban agriculture in your city — edible_volunteers","title":"The number of volunteers involved in urban agriculture in your city — edible_volunteers","text":"indicator estimates number volunteers potentially involved community urban agriculture initiatives city. uses range volunteers per square meter create median confidence interval number volunteers simulating random uniform distribution 1000 values within provided range. default range came required work hours urban agriculture assessed scientific literature, assuming volunteers dedicates 10","code":""},{"path":"https://icra.github.io/ediblecity/reference/edible_volunteers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The number of volunteers involved in urban agriculture in your city — edible_volunteers","text":"","code":"edible_volunteers(   x,   volunteers = c(0.00163, 0.22),   edible = NULL,   area_col = \"edible_area\",   interval = 0.95,   verbose = FALSE )"},{"path":"https://icra.github.io/ediblecity/reference/edible_volunteers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The number of volunteers involved in urban agriculture in your city — edible_volunteers","text":"x 'sf' object urban model city 'land_use' column categories urban features. volunteers vector length 2 range volunteers involved square meter edible gardens. edible categories 'land_uses' represent community edible gardens. NULL, land_uses 'city_land_uses' dataset area used volunteers TRUE. area_col column used area feature. NULL, area calculated sf::st_area(). interval numeric value confidence interval returned function. verbose TRUE, indicators returns vector (N=1000) simulated values.","code":""},{"path":"https://icra.github.io/ediblecity/reference/edible_volunteers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The number of volunteers involved in urban agriculture in your city — edible_volunteers","text":"verbose FALSE, returns named vector median low high confidence intervals. Otherwise, returns vector length 1000 simulated values.","code":""},{"path":"https://icra.github.io/ediblecity/reference/edible_volunteers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The number of volunteers involved in urban agriculture in your city — edible_volunteers","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/edible_volunteers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The number of volunteers involved in urban agriculture in your city — edible_volunteers","text":"","code":"# Get the 95% confidence interval edible_volunteers(city_example, interval = 0.95) #>        5%       50%       95%  #>  1.725485 17.419276 33.395424   # Get the raw values from the Monte Carlo simulation # and adjust the number of volunteers by squared meter. result <- edible_volunteers(city_example, volunteers = c(0.1, 0.2), verbose = TRUE) result[1:10] #>  [1] 20.50857 22.89086 29.95678 22.02531 28.09539 29.48669 20.83165 30.27948 #>  [9] 27.17688 27.44648"},{"path":"https://icra.github.io/ediblecity/reference/food_production.html","id":null,"dir":"Reference","previous_headings":"","what":"The food produced by urban agriculture in your city — food_production","title":"The food produced by urban agriculture in your city — food_production","text":"indicator estimates food (kg/year) produced urban agriculture initiatives city. uses range production type initiative create median confidence interval number jobs simulating random uniform distribution 1000 values within provided range.","code":""},{"path":"https://icra.github.io/ediblecity/reference/food_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The food produced by urban agriculture in your city — food_production","text":"","code":"food_production(   x,   edible_df = NULL,   area_col = \"edible_area\",   interval = 0.95,   verbose = FALSE )"},{"path":"https://icra.github.io/ediblecity/reference/food_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The food produced by urban agriculture in your city — food_production","text":"x 'sf' object urban model city 'land_use' column categories urban features. edible_df dataframe categories considered urban agriculture three columns: 'land_uses': Column land_use considered calculations corresponding   'land_use' column 'x'. 'food1': low range food production land_use (kg/year/m2). 'food2': high range food production land_use (kg/year/m2). area_col column used area feature. NULL, area calculated sf::st_area() interval numeric value confidence interval returned land_use. verbose TRUE, indicators returns vector (N=1000) simulated values.","code":""},{"path":"https://icra.github.io/ediblecity/reference/food_production.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The food produced by urban agriculture in your city — food_production","text":"verbose FALSE, returns named vector median low high confidence intervals (kg/year). Otherwise, returns vector length 1000 simulated values (kg/year)","code":""},{"path":"https://icra.github.io/ediblecity/reference/food_production.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The food produced by urban agriculture in your city — food_production","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/food_production.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The food produced by urban agriculture in your city — food_production","text":"","code":"# Estimate the food production within 95% confidence interval food_production(city_example, interval = 0.95, verbose = FALSE) #>        5%       50%       95%  #>  50.16483 195.87735 338.49299   # Get the raw values instead of the confidence interval result <- food_production(city_example, verbose = TRUE) result[1:10] #>  [1]  95.98065 347.11930 226.24425 143.33203  60.91998  53.54865  90.61372 #>  [8] 350.52389 297.15314 145.24956"},{"path":"https://icra.github.io/ediblecity/reference/green_capita.html","id":null,"dir":"Reference","previous_headings":"","what":"Urban green per capita — green_capita","title":"Urban green per capita — green_capita","text":"indicators calculates amount green per capita city. may include private green gardens crops exclude .","code":""},{"path":"https://icra.github.io/ediblecity/reference/green_capita.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Urban green per capita — green_capita","text":"","code":"green_capita(   x,   green_categories = NULL,   inhabitants = NULL,   neighbourhoods = NULL,   inh_col = NULL,   name_col = NULL,   private = FALSE,   verbose = FALSE,   min_inh = 0 )"},{"path":"https://icra.github.io/ediblecity/reference/green_capita.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Urban green per capita — green_capita","text":"x 'sf' object urban model city 'land_use' column categories urban features. green_categories categories considered urban green. NULL, categories 'city_land_uses' considered. inhabitants value representing inhabitants city. neighbourhoods (optional) 'sf' object polygons representing neighborhoods city. inh_col (optional) col 'x' 'neighborhoods' indicating inhabitants neighborhood. name_col (optional) col 'x' 'neighborhoods' indicating name neighborhood private FALSE (default), public areas considered indicator. TRUE, elements 'city_land_uses' 'private' TRUE considered. Alternatively, vector land_uses considered.#' verbose FALSE (default), indicator returns proportion least green neighbourhoods. Otherwise, return tibble green per capita neighborhood, provided 'inh_col' 'name_col' provided. min_inh neighbourhoods used, less inhabitants 'min-inh' discarded.","code":""},{"path":"https://icra.github.io/ediblecity/reference/green_capita.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Urban green per capita — green_capita","text":"numeric value expressing square meters green per capita. numeric value expressing proportion greenest least green neighbourhood. tibble green area, inhabitants green per capita neighbourhood.","code":""},{"path":"https://icra.github.io/ediblecity/reference/green_capita.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Urban green per capita — green_capita","text":"'inh_col' 'name_col' defined  'neighbourhoods' NULL, function searches columns 'x'. 'neighbourhoods' defined along previous , columns searched 'neighbourhoods' spatially joined 'x'. cases, 'inhabitants' ignored.","code":""},{"path":"https://icra.github.io/ediblecity/reference/green_capita.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Urban green per capita — green_capita","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/green_capita.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Urban green per capita — green_capita","text":"","code":"# Calculate total green per capita in the city green_capita(city_example, inhabitants = 6000) #> [1] 5.113167  # Calculate the differences between the greenest and the least green neighbourhoods green_capita(city_example, neighbourhoods = neighbourhoods_example,              inh_col = \"inhabitants\", name_col = \"name\") #> [1] 0.1528437  # Get the green per capita in each neighbourhood green_capita(city_example, neighbourhoods = neighbourhoods_example,              inh_col = \"inhabitants\", name_col = \"name\", verbose = TRUE) #> # A tibble: 2 × 4 #>   name              area inhabitants green_capita #>   <chr>            <dbl>       <dbl>        <dbl> #> 1 Sant Narcís nord 20016        1028        19.5  #> 2 Sant Narcís sud  15743        5290         2.98  # Use a customized vector of land_uses to be considered private green green_capita(city_example, inhabitants = 6000, private = c(\"Normal garden\", \"Commercial garden\")) #> [1] 10.67717"},{"path":"https://icra.github.io/ediblecity/reference/green_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance to closest public green area — green_distance","title":"Distance to closest public green area — green_distance","text":"indicator calculates distance residence closest public green area larger 'min_area'. can return summary distances percentage residence buildings defined distance.","code":""},{"path":"https://icra.github.io/ediblecity/reference/green_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance to closest public green area — green_distance","text":"","code":"green_distance(   x,   green_cat = NULL,   min_area = 5000,   residence_col = \"land_use_verbose\",   residences = \"Residence\",   percent_out = FALSE,   max_dist = 300,   verbose = FALSE )"},{"path":"https://icra.github.io/ediblecity/reference/green_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance to closest public green area — green_distance","text":"x 'sf' object urban model city 'land_use' column categories urban features. green_cat vector categories 'land_use' must considered calculations. NULL (default), 'city_land_uses' dataset used 'public' TRUE. min_area numerical value (meters). smaller green areas considered calculations. residence_col column 'x' residences specified. residences vector categories represent residences. percent_out TRUE, function returns percentage residences 'max_dist'. (default = FALSE) max_dist numeric value representing maximum distance residence public green area. verbose TRUE returns vector distances. Otherwise, returns specified value section.","code":""},{"path":"https://icra.github.io/ediblecity/reference/green_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance to closest public green area — green_distance","text":"'percent_out' FALSE, returns summary statistics distance. Otherwise, returns numeric value percentage residences 'max_dist' closest public green area.","code":""},{"path":"https://icra.github.io/ediblecity/reference/green_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distance to closest public green area — green_distance","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/green_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance to closest public green area — green_distance","text":"","code":"# Calculate a summary of the distances to closest public green area larger than 0.5 ha. green_distance(city_example, min_area = 5000) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    6.12  155.08  251.70  249.72  347.42  465.73   # Get the distances from each residence to its closest public green area. result <- green_distance(city_example, min_area = 0, verbose = TRUE) result[1:10] #> Units: [m] #>  [1] 70.379516  6.119484 82.848678 18.524184 46.426160 18.767635 59.879243 #>  [8] 54.543559 12.020277 11.959444  # Get the percentage of residences further than 300 m. from a green area larger than 0.5 ha. green_distance(city_example, percent_out = TRUE, max_dist = 300) #> [1] 36.92615"},{"path":"https://icra.github.io/ediblecity/reference/neighbourhoods_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Neighbourhoods of City Example — neighbourhoods_example","title":"Neighbourhoods of City Example — neighbourhoods_example","text":"contains GIS layer neighbourhoods city_example population. used run 'green_capita' indicator.","code":""},{"path":"https://icra.github.io/ediblecity/reference/neighbourhoods_example.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Neighbourhoods of City Example — neighbourhoods_example","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/no2_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequestration of nitrogen dioxide — no2_seq","title":"Sequestration of nitrogen dioxide — no2_seq","text":"indicator returns amount NO2 sequestered urban green.","code":""},{"path":"https://icra.github.io/ediblecity/reference/no2_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequestration of nitrogen dioxide — no2_seq","text":"","code":"no2_seq(x, green_df = NULL)"},{"path":"https://icra.github.io/ediblecity/reference/no2_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequestration of nitrogen dioxide — no2_seq","text":"x 'sf' object urban model city 'land_use' column categories urban features. green_df dataframe categories considered urban green four columns: 'land_uses': Column function considered calculations corresponding   'land_use' column 'x'. 'no2_seq1': low range NO2 sequestration function (ug/s/m2). 'no2_seq2': high range NO2 sequestration function (ug/s/m2). 'pGreen': proportion green surface function (0:1). overriden 'edible_are'   land_uses community garden, commercial garden, rooftop garden hydroponic rooftop. NULL, 'city_land_uses' dataset used.","code":""},{"path":"https://icra.github.io/ediblecity/reference/no2_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequestration of nitrogen dioxide — no2_seq","text":"numeric value total NO2 sequestration city (grams/second).","code":""},{"path":"https://icra.github.io/ediblecity/reference/no2_seq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequestration of nitrogen dioxide — no2_seq","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/no2_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequestration of nitrogen dioxide — no2_seq","text":"","code":"# Get the total nitrogen dioxide sequestered by urban green no2_seq(city_example) #>     gr/s  #> 102.1062"},{"path":"https://icra.github.io/ediblecity/reference/runoff_prev.html","id":null,"dir":"Reference","previous_headings":"","what":"Runoff prevention — runoff_prev","title":"Runoff prevention — runoff_prev","text":"indicator calculates runoff prevention considering rain event, infiltration capacity rain harvesting storage capacity. government.","code":""},{"path":"https://icra.github.io/ediblecity/reference/runoff_prev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runoff prevention — runoff_prev","text":"","code":"runoff_prev(   x,   runoff_df = NULL,   rain = 85,   floors_field = \"floors\",   harvest_dist = 10,   tank_size = c(0, 45) )"},{"path":"https://icra.github.io/ediblecity/reference/runoff_prev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runoff prevention — runoff_prev","text":"x 'sf' object urban model city 'land_use' column categories urban features. runoff_df dataframe categories considered impervious area three columns. 'land_uses' names 'land_use' 'x' considered impervious. Curve numbers columns 'CN1' 'CN2' range curve number function. 'water_storage', boolean column indicating whether land_uses potentially harvesting     storing rainwater using tank. NULL, categories values 'city_land_uses' considered. rain amount 24h-rain simulated, default 85 mm. floors_field column 'x' containing number floors building. Zero considered unbuilt areas like gardens streets. used calculate rainwater harvesting area, since upper surface considered. Missing values considered zero. harvest_dist Maximum distance (meters) buildings harvest rainwater tank_size two-length vector range tank size possibilities (m3).","code":""},{"path":"https://icra.github.io/ediblecity/reference/runoff_prev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runoff prevention — runoff_prev","text":"returns named vector values runoff mm, total rainfall harvested rainwater cubic meters.","code":""},{"path":"https://icra.github.io/ediblecity/reference/runoff_prev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Runoff prevention — runoff_prev","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/runoff_prev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runoff prevention — runoff_prev","text":"","code":"# Get the total values of runoff, rainfall and rain harvested runoff_prev(city_example) #>       runoff     rainfall  rainharvest  #>     36.22372 108169.04500   1159.84771   # Adjust the parameters for rain, maximum distance to harvest rainwater and tank size runoff_prev(city_example, rain = 160, harvest_dist = 5, tank_size = c(20,30)) #>      runoff    rainfall rainharvest  #>    102.3151 203612.3200   1387.1141"},{"path":"https://icra.github.io/ediblecity/reference/set_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the scenario for your edible city — set_scenario","title":"Set the scenario for your edible city — set_scenario","text":"can adjust different parameters define different city scenarios. object must contain field 'land_use' describes function type feature.","code":""},{"path":"https://icra.github.io/ediblecity/reference/set_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the scenario for your edible city — set_scenario","text":"","code":"set_scenario(   x,   pGardens = 1,   pVacant = 1,   pRooftop = 1,   edible_area_garden = c(0.02, 0.3),   edible_area_vacant = c(0.52, 0.75),   edible_area_rooftop = c(0.6, 0.62),   min_area_garden = 10,   min_area_vacant = 100,   min_area_rooftop = 100,   private_gardens_from = \"Normal garden\",   vacant_from = \"Vacant\",   rooftop_from = \"Rooftop\",   pCommercial = 0,   area_field = \"flat_area\",   quiet = FALSE )"},{"path":"https://icra.github.io/ediblecity/reference/set_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the scenario for your edible city — set_scenario","text":"x 'sf' object urban model city 'land_use' field categories urban features. pGardens proportion private gardens (land_use == 'Gardens') become edible gardens [0-1]. pVacant proportion vacant plot (land_use == 'Vacant') 'area >= min_area_vacant' become edible gardens [0-1]. pRooftop proportion rooftops (land_use == 'Flat rooftop') 'area >= min_area_rooftop' become edible rooftops [0-1]. edible_area_garden proportion range surface garden occupied edible plants [0-1]. edible_area_vacant proportion range surface vacant plot occupied edible plants [0-1]. edible_area_rooftop proportion range surface rooftop occupied edible plants [0-1]. min_area_garden minimum area garden must become edible garden. min_area_vacant minimum area vacant must become community commercial garden. min_area_rooftop minimum area flat rooftop must become edible rooftop. private_gardens_from categories 'land_uses' potentially converted edible private gardens vacant_from categories 'land_uses' potentially converted community commercial gardens rooftop_from categories 'land_uses' potentially converted edible rooftop (community raised beds commercial hydroponic) pCommercial proportion plots rooftop commercial. rest community gardens rooftops equivalent raised beds hydroponic system respectively. area_field field used area feature. NULL, area calculated sf::st_area() quiet 'TRUE', warnings proportions satisfied triggered.","code":""},{"path":"https://icra.github.io/ediblecity/reference/set_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the scenario for your edible city — set_scenario","text":"'sf' object 'x' respective proportion gardens ('Edible private garden'), vacant plots ('Community plot garden', 'Commercial plot garden') rooftop gardens ('Community rooftop garden', 'Commercial hydroponic rooftop') labeled edible gardens.","code":""},{"path":"https://icra.github.io/ediblecity/reference/set_scenario.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the scenario for your edible city — set_scenario","text":"pGardens, pVacant pRooftop lower 1, gardens selected randomly among gardens area larger 'min_area_*'. However, pCommercial > 0, commercial gardens hydroponic rooftops settled larger features, assuming commercial initiatives power acquire best spots.","code":""},{"path":"https://icra.github.io/ediblecity/reference/set_scenario.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the scenario for your edible city — set_scenario","text":"Josep Pueyo-Ros","code":""},{"path":"https://icra.github.io/ediblecity/reference/set_scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the scenario for your edible city — set_scenario","text":"","code":"# Set scenario with 50% of streets converted to community gardens # randomly occupying between 40 and 60% of street's area. scenario <- set_scenario(city_example, pGardens = 0, pVacant = 0.5, pRooftop = 0,                          edible_area_vacant = c(0.4, 0.6), vacant_from = \"Streets\") table(scenario$land_use) #>  #> Community garden            Grass    Normal garden       Paved area  #>               75               23              453               92  #>          Railway          Rooftop             Sand    School garden  #>                1              604                3                3  #>     Sports field          Streets            Trees      Vacant plot  #>                1               75               12                2   # Set scenario with 60% of rooftops converted to gardens, and 30% of those with commercial purpose. scenario <- set_scenario(city_example, pGardens = 0, pVacant = 0, pRooftop = 0.6, pCommercial = 0.3) #> Only 328 rooftops out of 362.4 assumed satisfy the 'min_area_rooftop' table(scenario$land_use) #>  #>   Community garden              Grass Hydroponic rooftop      Normal garden  #>                  1                 23                 99                453  #>         Paved area            Railway            Rooftop     Rooftop garden  #>                 92                  1                276                229  #>               Sand      School garden       Sports field            Streets  #>                  3                  3                  1                149  #>              Trees        Vacant plot  #>                 12                  2"}]
